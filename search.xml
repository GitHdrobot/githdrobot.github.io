<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Build Your Blog</title>
      <link href="/2021/09/30/build-github-blog-with-hexo/"/>
      <url>/2021/09/30/build-github-blog-with-hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-搭建github博客"><a href="#hexo-搭建github博客" class="headerlink" title="hexo 搭建github博客"></a>hexo 搭建github博客</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="GitHub账号"><a href="#GitHub账号" class="headerlink" title="GitHub账号"></a>GitHub账号</h3><ul><li>申请GitHub账号</li><li>创建username.github.io仓库</li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ul><li>安装node.js</li><li>安装git</li></ul><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><ul><li>在git bash中执行下面命令，连续回车3次</li></ul><pre class=" language-shell"><code class="language-shell">ssh-keygen -t rsa -C "邮件地址"</code></pre><ul><li>将文件~/.ssh/id_rsa.pub文件中的公钥添加到GitHub中</li><li>git bash 中执行下列命令，测试SSH配置是否正确</li></ul><pre class=" language-shell"><code class="language-shell">ssh -T git@github.com</code></pre><ul><li>设置邮箱、用户名</li></ul><pre class=" language-shell"><code class="language-shell">git config --global user.name "xxx"// xxx为github用户名git config --global user.email  "xxx@163.com"// github注册邮箱</code></pre><h2 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h2><h3 id="什么是hexo"><a href="#什么是hexo" class="headerlink" title="什么是hexo"></a>什么是hexo</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用&nbsp;<a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>更多: <a href="https://hexo.io/docs/">Get Started</a></p><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><pre class=" language-shell"><code class="language-shell">npm install -g hexo-clihexo init</code></pre><h3 id="hexo网站目录结构"><a href="#hexo网站目录结构" class="headerlink" title="hexo网站目录结构"></a>hexo网站目录结构</h3><pre class=" language-json"><code class="language-json">.├── _config.yml             网站配置文件 ├── package.json            应用程序信息├── scaffolds               模板文件夹├── source                  资源文件夹|   ├── _drafts|   └── _posts└── themes                  主题文件夹</code></pre><h1 id="编辑文档"><a href="#编辑文档" class="headerlink" title="编辑文档"></a>编辑文档</h1><ul><li>hexo new [layout] title                 创建文档，layout默认为post</li><li>使用编辑工具编辑创建的文档 </li><li>hexo generate                             生成静态文件</li><li>hexo clean &amp;&amp; hexo deploy        部署到服务器</li></ul><p>更多参见 <a href="https://hexo.io/docs">hexo doc</a></p><h1 id="hexo-升级"><a href="#hexo-升级" class="headerlink" title="hexo 升级"></a>hexo 升级</h1><pre class=" language-shell"><code class="language-shell">npm install -g npm-check-updatesncuncu -u# 以下命令用来解决依赖问题，非必须，视实际环境执行npm audit fixnpm auditnpm update kind-of --depth 10</code></pre>]]></content>
      
      
      <categories>
          
          <category> Web Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/30/hello-world/"/>
      <url>/2021/09/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>Welcome</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Serial-communication</title>
      <link href="/2021/09/28/serial-communication/"/>
      <url>/2021/09/28/serial-communication/</url>
      
        <content type="html"><![CDATA[<p>Serial通信一般分为同步通信（SPI、I^2C）和异步通信（UART），硬件上主要区别是同步通信总线上有单独的同步时钟线，在数据链路层，异步通信数据帧上需添加额外信息（起始位、停止位、空闲位）用于同步数据帧。逻辑信号表示分为single-ended和differential，差分信号有较好抗噪声、传输距离更长优点正逐步替代单端模式。</p><h2 id="Asynchronous-Communication"><a href="#Asynchronous-Communication" class="headerlink" title="Asynchronous Communication"></a>Asynchronous Communication</h2><p>UART：通用异步收发器，一般指串口、总线标准有EIA RS-232  、EIA RS-485、RS-422，是早期计算机最早的通信设备之一，应用十分广泛。</p><p>CAN：控制器局域网，由BOSCH公司开发，利用message identifier定义内容和消息优先顺序进行传输。当前使用较多的规范11位标识符的CAN2.0 A和29位标识符的CAN2.0B。ISO于1993年公布了can标准ISO11898。</p><p>Ethernet：以太网通信规范，现互联网使用较为普遍的通信标准，10BASE-T使用manchester编码，100BASE-T使用4B5B编码，1000BASE-T（IEEE802.3ab）使用PAM-5编码。</p><p>Firewire：”火线“是苹果公司对IEEE 1394标准的命名，该标准的提出与USB有着相似目的，早期1394标准速度优于USB。</p><p>SATA：一种用于连接主机总线和大容量存储设备的总线接口。</p><p>SAS：序列化SCSI（Serial Attached SCSI）一种点对点的串行协议，由并行SCSI发展而来。主要用作连接计算机周边设备如硬盘、CD-ROM，进行数据传输。</p><h3 id="电路电平"><a href="#电路电平" class="headerlink" title="电路电平"></a>电路电平</h3><p>RS232电平范围-15到15V，采用负逻辑。RS485使用差分信号表示，电平范围-7到12V。</p><img src="Rs232_Rs485_standard.PNG" alt="Rs232 Rs485 Standard" style="zomm:%100;"><p>CAN电平范围0~5V，使用differential模式以dominant state （逻辑0，diff v:2.0v）和 recessive state（逻辑1，diff v:0v）两种状态表示逻辑信号。</p><img src="ISO11898-2.svg" alt="CAN standard logic level" style="zomm:%100;"><p>常见TTL（7000 series）、CMOS（4000 series）</p><img src="Standard Logic Levels.PNG" alt="Standard Logic Levels" style="zomm:%100;"><h3 id="信号波形"><a href="#信号波形" class="headerlink" title="信号波形"></a>信号波形</h3><p>Rs232发送’K’字符（0x4B）波形如下图：</p><img src="Rs232_oscilloscope_trace.svg" alt="Rs232 waveform" style="zomm:%100;"><p>Rs485发送0xD3波形如下图：</p><img src="RS-485_waveform.svg" alt="Rs485 waveform" style="zomm:%100;"><p>CAN波形：</p><p>CAN采用NRZ编码，为维护帧同步一般会对数据帧进行位填充。</p><img src="CAN-Bus-frame_in_base_format_without_stuffbits.svg" alt="CAN waveform without stuffbits" style="zomm:%100;"><img src="CAN-Frame_mit_Pegeln_mit_Stuffbits.svg" alt="CAN waveform with stuffbits" style="zomm:%100;"><h3 id="常见电平转换芯片"><a href="#常见电平转换芯片" class="headerlink" title="常见电平转换芯片"></a>常见电平转换芯片</h3><p>232转ttl电平：max232（MAXIM），SP3232E（SIPEX）</p><p>usb转ttl：PL2303HX（Prolific）、CH340（沁恒）、XR21V1410（MaxLinear）、FT232（FTDI）、CP2104（SILICON LABS）</p><h2 id="Synchronous-Communication"><a href="#Synchronous-Communication" class="headerlink" title="Synchronous Communication"></a>Synchronous Communication</h2><p>HDMI：高清多媒体接口（High Definition Multimedia Interface）该接口实现了 EIA/CEA-861标准，用于传输音视频数据。</p><p>PCIE：高速串行计算机扩展总线标准。（PCI：Peripheral Component Interconnect，外设组件互连总线）</p><p>SPI：串行外设接口（Serial Peripheral Interface），一种短距离的同步串行通信接口规范，主要用于嵌入式系统中。使用主从架构，工作在全双工模式。</p><p>SPI　master－slave连接示意图</p><img src="SPI_8-bit_circular_transfer.svg" alt="SPI　schematic" style="zomm:%100;"><p>SPI　时序图</p><img src="SPI_timing_diagram2.svg" alt="SPI　timing　diagram" style="zomm:%100;"><p>I^2C：集成电路总线（Inter-Integrated Circuit），是一种同步、多主多从，single-ended串行通信总线。广泛应用于外设集成电路和mcu之间的一种短距离板级通信协议。</p><img src="Basics-of-I2C-Communication-Data-Transfer-Protocol.jpg" alt="I2C frame format" style="zomm:%100;"><img src="I2C.svg" alt="I2C schematic" style="zomm:%100;"><img src="I2C_data_transfer.svg" alt="I2C timing diagram" style="zomm:%100;"><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>Rs232为何采用负逻辑</p><p>异步通信与同步通信（SPI、I^2C）的主要区别</p><p>PCI发展到PCI-e，并行SCSI发展到串行SCSI，即串行总线代替并行总线速度反而提高</p>]]></content>
      
      
      
        <tags>
            
            <tag> Serial Communication </tag>
            
            <tag> Synchronous </tag>
            
            <tag> Asynchronous </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Router introduction</title>
      <link href="/2021/08/08/router-introduction/"/>
      <url>/2021/08/08/router-introduction/</url>
      
        <content type="html"><![CDATA[<p>随着信息化发展，路由器肩负着数据交换重任，是现代通信网不可或缺的基石</p><h1 id="路由器介绍"><a href="#路由器介绍" class="headerlink" title="路由器介绍"></a>路由器介绍</h1><p>路由器作为ICT的一个最重要的基础设施，在在通信网络中扮演着十分重要的角色，从漂亮国打压菊厂的力度可见一斑。路由器作为网路设备， 处于OSI中的网络层，实现网路数据交换，他与交换机的区别主要是：交换机创造网络二路由器连接网络，路由器作为分发者，选择最优的路径传输数据，交换机（2层）工作在 数据链路层上，路由器则工作在网络层。路由器转发方式有进程转发、快速转发、优化转发、分布式转发，交换结构有共享内存型、总线型、cross-bar型。路由器的体系结构：路由器从单总线、单CPU结构发展到单总线、多CPU再到多总线多CPU，采用交叉开关方式。</p><h2 id="厂商"><a href="#厂商" class="headerlink" title="厂商"></a>厂商</h2><p>下图是一些主要的路由器生产厂商，此外|腾达、水星、博达、迅捷、华硕等也是比较常见的生产厂商，华硕和博通合作，在消费者领域发展迅猛。这些厂商以华为技术较为雄厚，其企业高端交换机如CloudEngine 16816，交换容量最高可达2870Tbps，转包率460800Mpps；路由器NetEngine 8000 X8，交换容量750.69 Tbps，转包率172,800 Mpps。</p><img src="router_company.svg" alt="路由器厂商" style="zoom:100%;"><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><img src="Router_hw_architecture_logical.png" alt="Router architecture" style="zomm:%100;"><img src="Router_hw_architecture_example.png" alt="Router architecture" style="zomm:%100;"><img src="Router_sw_architecture.png" alt="Router architecture" style="zomm:%100;"><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><table><thead><tr><th>模块</th><th>品牌</th><th>主要功能</th></tr></thead><tbody><tr><td>CPU（处理器）</td><td>博通、高通、联发科、瑞昱、Ralink、Marvell、Ubicon</td><td>对路由进程、路由算法、路由过滤、网络管理、配置管理、数据包转发等控制方面的处理</td></tr><tr><td>内存</td><td>金士顿、三星、美光、海力士</td><td>缓存</td></tr><tr><td>flash</td><td>金士顿、三星、美光、闪迪</td><td>存储路由器操作系统</td></tr><tr><td>无线芯片</td><td>博通、atheros、MTK、Lantiq</td><td>无线管理芯片，收发无线信号</td></tr><tr><td>功放芯片</td><td>skyworkks、Qorva、Qualcomm、Broadcom、Murata</td><td>发送、接收高频信号</td></tr><tr><td>Nvram</td><td>STM、Cypress Semiconductor、Maxim Integrated</td><td>保存配置文件</td></tr><tr><td>ROM</td><td>\</td><td>POST、Boost Strap代码、Mini OS</td></tr><tr><td>输入、出端口</td><td>\</td><td>一般由线卡提供，链路层封装、解封装，数据包分类、SLIP、PPP协议</td></tr></tbody></table><p>此外还有网络变压器、ASIC（交换芯片，一般用于高端产品）</p><h2 id="固件"><a href="#固件" class="headerlink" title="固件"></a>固件</h2><table><thead><tr><th>名称</th><th>开发者</th><th>开源协议</th><th>说明</th></tr></thead><tbody><tr><td>IOS</td><td>Cisco</td><td>闭源</td><td>用于Cisco产品的商业软件</td></tr><tr><td>OpenWrt</td><td>LEDE</td><td>GPL</td><td>基于Linux，其他组件可能使用不同开源协议，插件丰富，支持硬件较多</td></tr><tr><td>DD-WRT</td><td>BrainSlayer</td><td>GPL</td><td>基于Linux，LinSys迫于压力开源WRT54G/GS固件发展而来</td></tr><tr><td>Tomato</td><td>/</td><td>GPL</td><td>基于Linux，有HyperWRT发展而来，简单易用</td></tr><tr><td>Vyos</td><td>/</td><td>GPL</td><td>基于debian开源的网络操作系统，</td></tr><tr><td>Asuswrt-merlin</td><td>Eric Sauvageau</td><td>GPL</td><td>基于Asuswrt 二次开发</td></tr><tr><td>Padavan</td><td></td><td>GPL</td><td>基于华硕 RT-N56U 进行魔改，俗称华硕老毛子固件</td></tr></tbody></table><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><h3 id="标准组织"><a href="#标准组织" class="headerlink" title="标准组织"></a>标准组织</h3><table><thead><tr><th>名称</th><th>主要委员会</th><th>主要（标准）协议</th></tr></thead><tbody><tr><td>IEEE<br>Institute of Electrical and Electronics Engineers<br>电气和电子工程师协会<br>面向电子电气工程、通讯、计算机工程、<br>计算机科学理论和原理研究的组织<br> <a href="http://www.ieee.org/">www.ieee.org</a></td><td>IEEE 754──浮点算法规范<br>IEEE 802──局域网及城域网<br>IEEE 802.11──无线网络<br>IEEE 802.16──无线寛频网络<br>IEEE 829──软件测试文书<br>IEEE 896──未来总线Futurebus<br>IEEE 1003──POSIX<br>IEEE 1076──VHDL（VHSIC硬件描述语言）<br>IEEE 1149.1──JTAG<br>IEEE 1275──Open Firmware<br>IEEE 1284──并口<br>IEEE P1363──公钥密码<br>IEEE 1364——Verilog硬件描述语言<br>IEEE 1394──串行总线“火线”<br>IEEE 1619──存储安全<br>IEEE 1901──PLC<br>IEEE 12207──软件生命周期过程（IT）</td><td>IEEE 802.1──高级接口High Level Interface(Internetworking)<br>IEEE 802.2──逻辑链路控制<br>IEEE 802.3──带冲突检测的载波侦听多路访问协议CSMA/CD（半双工以太网）<br>IEEE 802.4──令牌通行总线<br>IEEE 802.5──令牌通行环（Token-Passing Ring）<br>IEEE 802.6──城域网<br>IEEE 802.7──宽带局域网（Brandband LAN）<br>IEEE 802.8──光纤局域网<br>IEEE 802.9──集成数据和语音网络<br>IEEE 802.10──网络安全（Network Security）<br>IEEE 802.11──无线局域网络<br>IEEE 802.12──100VG-AnyLAN（Voice Grade - Sprache geeignet）<br>IEEE 802.14──有线电视<br>IEEE 802.15──无线个人局域网络<br>IEEE 802.16──无线寛频网络<br>IEEE 802.17──弹性分组环（Resilient Packet Ring）</td></tr><tr><td>IETF<br>Internet Engineering Task Force<br>互联网工程任务组<br>推动Internet标准规范制定的最主要的组织<br><a href="http://www.rfc-editor.org/">www.rfc-editor.org</a></td><td>Applications Area (app)<br>Internet Area (int)<br>Operations &amp; Network Management Area (ops)<br>Routing Area (rtg)<br>Real-time Applications and Infrastructure Area (rai)<br>Security Area (sec)<br>Transport and Services Area (tsv) – frequently also referred to as the “Transport Area”</td><td>几乎涵盖网路层以上协议</td></tr><tr><td>ITU<br>International Telecommunication Union<br>国际电信联盟<br>itu.int/ITU-T<br><a href="http://www.itu.int/rec/T-REC/en">www.itu.int/rec/T-REC/en</a><br>旨在促进国际上通信网络的互联互通。进行全球无线电频谱和卫星轨道的划分，制定技术标准以确保实现网络和技术的无缝互连。</td><td>A ITU-T工作组织，管理<br>B 表达式定义方法，符号和分类<br>C 通用电信统计学（General telecommunication statistics）<br>D 通用资费原则（General tariff principles）<br>E 全网络业务，电话业务，维护操作和人为因素<br>F 非电话电信服务 （Non-telephone telecommunication services）<br>G 传输系统和媒体，数据系统和网络（Transmission systems and media, digital systems and networks）<br>H 可视音频和多媒体系统（Audiovisual and multimedia systems）<br>I 综合业务数字网（Integrated services digital network）<br>J 电缆网络电视传输，声音节目和其他多媒体信号（Cable networks and transmission of television, sound programme and other multimedia signals）<br>K 抗干扰保护（Protection against interference）<br>L 户外电缆和元件的施工、安装和保护（Construction, installation and protection of cables and other elements of outside plant）<br>M 网络维护，国际传输系统电话电路电报传真和租用电路<br>O 计量设备规范Specifications of measuring equipment<br>P 电话传输质量，安装和本地网<br>Q 交换和信令 （Switching and signalling）<br>R 电报传输（Telegraph transmission）<br>S 电报业务无终端设备（Telegraph services terminal equipment）<br>T 远程信息处理业务终端（Terminals for telematic services）<br>U 电报交换（Telegraph switching）<br>V 电话网上的数据通信（Data communication over the telephone network）<br>X 数据网和开放系统通信（Data networks and open system communications）<br>Y 全球信息基础架构和网络协议特征（Global information infrastructure and Internet protocol aspects）<br>Z 电信系统语言和通用软件特征（Languages and general software aspects for telecommunication systems ）</td><td>V.24、H.264、E.164……</td></tr><tr><td>ISO<br>International Organization for Standardization<br>国际标准化组织<br><a href="http://www.iso.org/">www.iso.org</a><br>制定全世界工商业国际标准的国际标准建立机构。</td><td></td><td>ISO 9000、编码标准……</td></tr><tr><td>EIA、TIA、ANSIC</td><td></td><td>EIA-232、EIA-422、EIA-485、TIA/EIA-568（RJ45）、ANSIC编码、ANSIC C……</td></tr></tbody></table><h3 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h3><p>Ethernet II、IEEE 802.3标准的区别：1、帧格式不同 6（DMAC）+6（SMAC）+2（Type/Length）；2、制定者不同；3、使用范围不同，Ethernet II使用更加广泛。MTU：46-1500，两者都采用CSMA-CD（Carrier Sense Multiple Access with Collision Detection ）技术</p><img src="network_proto_model.svg" alt="Network protocol model" style="zomm:%100;"><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>为何MTU最小是46，最大是1500</p>]]></content>
      
      
      
        <tags>
            
            <tag> NetWork </tag>
            
            <tag> Router </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
